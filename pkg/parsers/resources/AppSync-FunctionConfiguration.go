package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// AppSyncFunctionConfiguration Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html
type AppSyncFunctionConfiguration struct {
	Type       string                                 `yaml:"Type"`
	Properties AppSyncFunctionConfigurationProperties `yaml:"Properties"`
	Condition  interface{}                            `yaml:"Condition,omitempty"`
	Metadata   interface{}                            `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                            `yaml:"DependsOn,omitempty"`
}

// AppSyncFunctionConfiguration Properties
type AppSyncFunctionConfigurationProperties struct {
	ApiId                             interface{} `yaml:"ApiId"`
	DataSourceName                    interface{} `yaml:"DataSourceName,omitempty"`
	Description                       interface{} `yaml:"Description,omitempty"`
	FunctionVersion                   interface{} `yaml:"FunctionVersion,omitempty"`
	Name                              interface{} `yaml:"Name,omitempty"`
	RequestMappingTemplate            interface{} `yaml:"RequestMappingTemplate,omitempty"`
	RequestMappingTemplateS3Location  interface{} `yaml:"RequestMappingTemplateS3Location,omitempty"`
	ResponseMappingTemplate           interface{} `yaml:"ResponseMappingTemplate,omitempty"`
	ResponseMappingTemplateS3Location interface{} `yaml:"ResponseMappingTemplateS3Location,omitempty"`
}

// NewAppSyncFunctionConfiguration constructor creates a new AppSyncFunctionConfiguration
func NewAppSyncFunctionConfiguration(properties AppSyncFunctionConfigurationProperties, deps ...interface{}) AppSyncFunctionConfiguration {
	return AppSyncFunctionConfiguration{
		Type:       "AWS::AppSync::FunctionConfiguration",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseAppSyncFunctionConfiguration parses AppSyncFunctionConfiguration
func ParseAppSyncFunctionConfiguration(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"

	// Resources
	var resource AppSyncFunctionConfiguration
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	// Outputs

	outputs = types.TemplateObject{
		name: types.TemplateObject{
			"Description": name + " Object",
			"Value": map[string]interface{}{
				"Ref": name,
			},
			"Export": map[string]interface{}{
				"Name": map[string]interface{}{
					"Fn::Sub": "${AWS::StackName}-AppSyncFunctionConfiguration-" + name,
				},
			},
		},
	}

	return
}

// ParseAppSyncFunctionConfiguration validator
func (resource AppSyncFunctionConfiguration) Validate() []error {
	return resource.Properties.Validate()
}

// ParseAppSyncFunctionConfigurationProperties validator
func (resource AppSyncFunctionConfigurationProperties) Validate() []error {
	errors := []error{}
	return errors
}
