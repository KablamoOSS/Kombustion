package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// NeptuneDBParameterGroup Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html
type NeptuneDBParameterGroup struct {
	Type       string                            `yaml:"Type"`
	Properties NeptuneDBParameterGroupProperties `yaml:"Properties"`
	Condition  interface{}                       `yaml:"Condition,omitempty"`
	Metadata   interface{}                       `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                       `yaml:"DependsOn,omitempty"`
}

// NeptuneDBParameterGroup Properties
type NeptuneDBParameterGroupProperties struct {
	Description interface{} `yaml:"Description"`
	Family      interface{} `yaml:"Family"`
	Name        interface{} `yaml:"Name,omitempty"`
	Parameters  interface{} `yaml:"Parameters"`
	Tags        interface{} `yaml:"Tags,omitempty"`
}

// NewNeptuneDBParameterGroup constructor creates a new NeptuneDBParameterGroup
func NewNeptuneDBParameterGroup(properties NeptuneDBParameterGroupProperties, deps ...interface{}) NeptuneDBParameterGroup {
	return NeptuneDBParameterGroup{
		Type:       "AWS::Neptune::DBParameterGroup",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseNeptuneDBParameterGroup parses NeptuneDBParameterGroup
func ParseNeptuneDBParameterGroup(name string, data string) (cf types.TemplateObject, err error) {
	var resource NeptuneDBParameterGroup
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: NeptuneDBParameterGroup - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseNeptuneDBParameterGroup validator
func (resource NeptuneDBParameterGroup) Validate() []error {
	return resource.Properties.Validate()
}

// ParseNeptuneDBParameterGroupProperties validator
func (resource NeptuneDBParameterGroupProperties) Validate() []error {
	errs := []error{}
	if resource.Description == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Description'"))
	}
	if resource.Family == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Family'"))
	}
	if resource.Parameters == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Parameters'"))
	}
	return errs
}
