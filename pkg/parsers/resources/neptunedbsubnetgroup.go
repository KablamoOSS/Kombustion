package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// NeptuneDBSubnetGroup Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html
type NeptuneDBSubnetGroup struct {
	Type       string                         `yaml:"Type"`
	Properties NeptuneDBSubnetGroupProperties `yaml:"Properties"`
	Condition  interface{}                    `yaml:"Condition,omitempty"`
	Metadata   interface{}                    `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                    `yaml:"DependsOn,omitempty"`
}

// NeptuneDBSubnetGroup Properties
type NeptuneDBSubnetGroupProperties struct {
	DBSubnetGroupDescription interface{} `yaml:"DBSubnetGroupDescription"`
	DBSubnetGroupName        interface{} `yaml:"DBSubnetGroupName,omitempty"`
	SubnetIds                interface{} `yaml:"SubnetIds"`
	Tags                     interface{} `yaml:"Tags,omitempty"`
}

// NewNeptuneDBSubnetGroup constructor creates a new NeptuneDBSubnetGroup
func NewNeptuneDBSubnetGroup(properties NeptuneDBSubnetGroupProperties, deps ...interface{}) NeptuneDBSubnetGroup {
	return NeptuneDBSubnetGroup{
		Type:       "AWS::Neptune::DBSubnetGroup",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseNeptuneDBSubnetGroup parses NeptuneDBSubnetGroup
func ParseNeptuneDBSubnetGroup(name string, data string) (cf types.TemplateObject, err error) {
	var resource NeptuneDBSubnetGroup
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: NeptuneDBSubnetGroup - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseNeptuneDBSubnetGroup validator
func (resource NeptuneDBSubnetGroup) Validate() []error {
	return resource.Properties.Validate()
}

// ParseNeptuneDBSubnetGroupProperties validator
func (resource NeptuneDBSubnetGroupProperties) Validate() []error {
	errs := []error{}
	if resource.DBSubnetGroupDescription == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'DBSubnetGroupDescription'"))
	}
	if resource.SubnetIds == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'SubnetIds'"))
	}
	return errs
}
